service: () -> {
    cancelAuction: (text) -> (variant {Ok:record {id:text; status:text; creator:principal; createdAt:text; nftId:text; highest_bidder_id:text; is_active:bool; highest_bid:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}});
    createArtistProfile: (record {name:text; walletAddress:text; email:text}) -> (variant {Ok:record {id:text; owner:principal; name:text; createdAt:text; walletAddress:text; email:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}});
    createAuction: (record {nftId:text}) -> (variant {Ok:record {id:text; status:text; creator:principal; createdAt:text; nftId:text; highest_bidder_id:text; is_active:bool; highest_bid:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}});
    finalizeAuction: (text) -> (variant {Ok:record {id:text; createdAt:text; nftId:text; buyerId:text; sellerId:text; price:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}});
    getActiveAuctions: () -> (variant {Ok:vec record {id:text; status:text; creator:principal; createdAt:text; nftId:text; highest_bidder_id:text; is_active:bool; highest_bid:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}}) query;
    getAllBidsForAuction: (text) -> (variant {Ok:vec record {id:text; createdAt:text; nftId:text; buyerId:text; sellerId:text; price:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}}) query;
    getArtistNFTsForAuction: (text) -> (variant {Ok:vec record {id:text; status:text; artworkId:text; createdAt:text; ownerIds:vec text; price:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}}) query;
    getArtistProfileById: (text) -> (variant {Ok:record {id:text; owner:principal; name:text; createdAt:text; walletAddress:text; email:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}}) query;
    getArtworkById: (text) -> (variant {Ok:record {id:text; title:text; createdAt:text; artistId:text; description:text; imageUrl:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}}) query;
    getAuctionById: (text) -> (variant {Ok:record {id:text; status:text; creator:principal; createdAt:text; nftId:text; highest_bidder_id:text; is_active:bool; highest_bid:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}}) query;
    getCompletedAuctions: () -> (variant {Ok:vec record {id:text; status:text; creator:principal; createdAt:text; nftId:text; highest_bidder_id:text; is_active:bool; highest_bid:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}}) query;
    getNFTAuctionHistory: (text) -> (variant {Ok:vec record {id:text; status:text; creator:principal; createdAt:text; nftId:text; highest_bidder_id:text; is_active:bool; highest_bid:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}}) query;
    getNFTById: (text) -> (variant {Ok:record {id:text; status:text; artworkId:text; createdAt:text; ownerIds:vec text; price:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}}) query;
    getTransactionById: (text) -> (variant {Ok:record {id:text; createdAt:text; nftId:text; buyerId:text; sellerId:text; price:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}}) query;
    mintArtwork: (record {title:text; artistId:text; description:text; imageUrl:text}) -> (variant {Ok:record {id:text; title:text; createdAt:text; artistId:text; description:text; imageUrl:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}});
    mintNFT: (record {artworkId:text; price:nat64}) -> (variant {Ok:record {id:text; status:text; artworkId:text; createdAt:text; ownerIds:vec text; price:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}});
    placeBid: (text, text, nat64) -> (variant {Ok:record {id:text; status:text; creator:principal; createdAt:text; nftId:text; highest_bidder_id:text; is_active:bool; highest_bid:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text}});
}
